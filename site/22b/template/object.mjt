<!!--
 Copyright 2010, Google Inc.
 All rights reserved.

 Redistribution and use in source and binary forms, with or without
 modification, are permitted provided that the following conditions are
 met:

     * Redistributions of source code must retain the above copyright
 notice, this list of conditions and the following disclaimer.
     * Redistributions in binary form must reproduce the above
 copyright notice, this list of conditions and the following disclaimer
 in the documentation and/or other materials provided with the
 distribution.
     * Neither the name of Google Inc. nor the names of its
 contributors may be used to endorse or promote products derived from
 this software without specific prior written permission.

 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 !!-->

<!!--
  This is the base template for any object (with an ID) in freebase
  Uses template/freebase.mjt for chrome
!!-->
<acre:script>
  var c = this.exports.c = {};
  var h = acre.require("lib/helper/helpers.sjs");
  var i18n = acre.require("lib/i18n/i18n.sjs");
  var i18n_c = acre.require("lib/i18n/components.mjt");
  var _ = i18n.gettext;
  var components = acre.require("lib/template/components.mjt");
  var image = acre.require("lib/template/imagecomponents.mjt");
  var base = acre.require("lib/template/freebase.mjt");
  var self= this;
  var this_exports = this.exports;
  var that_exports;
  var fh = acre.require("lib/filter/helpers.sjs");
  // microdata helpers
  var microdata = acre.require("lib/helper/microdata.sjs");
  var itemprop = microdata.itemprop

  var exec = function (o, scope) {
    var ifexec = true;
    if ("if" in o) {
      ifexec = o["if"];
    }
    if (h.isFunction(ifexec)) {
      ifexec = o["if"] = ifexec.apply(scope);
    }
    if (ifexec) {
      for (var key in o) {
        if (key === "if") continue;
        var val = o[key];
        if (h.isFunction(val)) o[key] = val.apply(scope);
      }
      return true;
    }
    else {
      return false;
    }

  };
</acre:script>

<acre:block def="page(exports)">
  <acre:script>
    that_exports = exports;
  </acre:script>
  ${base.page(this_exports)}
</acre:block>

<acre:block def="freebase_js()">
  <script src="template/object.mf.js"></script>
</acre:block>

<acre:block def="freebase_css()">
  <link rel="stylesheet" type="text/css" href="template/object.mf.css" />
</acre:block>

<acre:block def="head()">
  <!-- canonical url -->
  <link rel="canonical" href="${h.fb_url(true, c.object.id)}" />

  <acre:block if="that_exports.head">
    ${that_exports.head()}
  </acre:block>
</acre:block>

<acre:block def="title()">
  ${i18n.display_name(c.object)}
</acre:block>

<acre:block def="content(exports)">
  <div id="content" class="clear" itemscope="" data-id="${c.object.id}">
    ${content_body()}
  </div>
</acre:block>

<acre:block def="content_body()">
  <!!--
    Flags (merge, delete, split, objectionable)
  !!-->
  <!!--
     object meta information @see queries/topic
  !!-->
  <div id="page-header">

    <acre:block if="c.object.flag && c.object.flag.length">
      <acre:script>
        var msgs = {
          "/freebase/flag_kind/merge": _("This topic has been flagged to be merged with another topic."),
          "/freebase/flag_kind/split": _("This topic has been flagged to be split into multiple topics."),
          "/freebase/flag_kind/delete": _("This topic has been flagged to be deleted from Freebase."),
          "/freebase/flag_kind/offensive": _("This topic has been flagged as objectionable.")
        };
      </acre:script>
      <div class="page-flag">
        <acre:block for="flag in c.object.flag">
          <acre:script>
            var msg = msgs[flag.kind.id];
          </acre:script>
          <acre:block if="msg">
            <acre:script>
              var perm_obj = {id:h.get_attribution(flag).creator};
            </acre:script>
            <div class="page-flag-kind">
              <span class="page-flag-msg">${msg}</span>
              <a href="${h.legacy_fb_url('/discuss/threads' + flag.id)}">${_("Vote on this issue here")}</a>.
              <span class="edit-perm ${JSON.stringify(perm_obj)}">
                <a href="#" onclick="return window.freebase.flag.undo(this, '${flag.id}');">Undo</a>.
              </span>
            </div>
          </acre:block>
        </acre:block>
      </div>
    </acre:block>

    <acre:block if="c.object">
      <!!--
        Object label + thumbnail
      !!-->
      <acre:script>
        var label = c.object_type.name;
        var classname = 'object-label ';
        classname += label === 'Topic' ? 'img' : 'no-img';
      </acre:script>
      <div class="$classname">
        <div id="image" acre:if="c.show_image">
          <acre:block if="c.object.image && c.object.image.length">
          <acre:script>
            var options = {
              maxheight: 53,
              maxwidth: 53,
              mode: 'fillcropmid',
              pad: 2
            };
          </acre:script>
            ${image.image_thumb(c.object.image[0], 50, options)}
          </acre:block>
        </div>
        ${object_label(label)}
      </div>

      <!!--
        Object Name + Creator + Timestamp
      !!-->
      <div class="page-title">
        <span class="creation-timestamp">
          <span acre:if="c.object.attribution"
                acre:attrs="itemprop('/type/object/creator', true)">
            ${image.user_image_tiny(c.object.attribution.creator)}
            ${_("Created by")}

            ${components.attribution(c.object.attribution)}


            ${_("on")}
          </span>
          <span acre:else="">
            ${_("Created on")}
          </span>
          <acre:script>
            var attrs = itemprop('/type/object/timestamp');
            attrs["class"] = "published";
            attrs["data-format"] = "long";
          </acre:script>
          ${i18n_c.datetime(c.object.timestamp, attrs)}
        </span>

        <acre:block if="c.object.name.length">
          <h1>
            <span acre:attrs="itemprop('/type/object/name')">
              ${c.object.name[0].value}
            </span>
            <ul class="inline-menu nicemenu">
              <li class="inline-menu-item nicemenu-item">
                <span class="headmenu">
                  <a href="#" class="menu-trigger" onclick="return false;">
                    ${i18n_c.lang_code(c.object.name[0].lang, null, true)}
                  </a>
                </span>
                <ul class="submenu localization">
                  <acre:script>
                    var ajax_prefix = h.ajax_url('lib/i18n');
                  </acre:script>
                  <li>                    
                    <a href="#" onclick="return i18n.text_edit(this, '${ajax_prefix}', '${c.object.id}', '/type/object/name', '${i18n.lang}');" class="icon-link">
                     <span class="edit-icon">${_("Edit localized names")} &hellip;</span>
                    </a>
                  </li>
                 <acre:block for="(var i=1,l=c.object.name.length; i<l; i++)">
                    <acre:script>
                      var n = c.object.name[i];
                    </acre:script>
                    <li class="">
                      <a href="${h.build_url(null, c.object.id, [['lang', h.lang_code(n.lang)]])}">
                        ${n.value}
                        ${i18n_c.lang_code(n.lang, null, true)}
                      </a>
                    </li>
                  </acre:block>
                </ul>
              </li>
            </ul> 
          </h1>
          </acre:block>
          <!!--
            Show object ID if no name exists
          -->
          <acre:block else="">
            <h1>
              <span acre:attrs="itemprop('/type/object/id')">${c.object.id}</span>
            </h1>
          </acre:block>

          <acre:block if="that_exports.nav_flags">
            <span class="flags">
              ${that_exports.nav_flags()}
            </span>
          </acre:block>

          <!!-- Show topic MID -->
          <div class="meta">
            <span class="key">
              <strong><abbr title="${_('ID')}">${_("id")}</abbr></strong>:
              <span acre:attrs="itemprop('/type/object/id')">${c.object.id}</span>
            </span>
            <span acre:for="nk in c.nav_keys" class="key">
              <acre:block if="exec(nk, c)">
                <strong>${nk.label}:</strong> 
                <a acre:if="nk.url" href="$nk.url">${nk.key}</a>
                <acre:block else="">${nk.key}</acre:block>
              </acre:block>
            </span>
          </div>

          <!!-- blurb should be sentence-level truncation at ~30 words -->
          <div id="description" class="clear">
            <acre:block if="c.blurb">
              <acre:script>
                var article = c.object.article;
                var words = c.blurb.split(/\s+/);
                var word_length = 30;
              </acre:script>
              <acre:block if="words.length < word_length">
                <p class="blurb" itemprop="desc">${c.blurb}</p>
              </acre:block>
              <acre:block else="">
                <p class="blurb" itemprop="desc">${words.slice(0, word_length).join(" ")}&hellip;<a href="#" title="${_('Show more')}" onclick="$$(this).parent('p').hide().next('p').show();return false;">[ + ]</a></p>
                <p style="display:none;">${c.blurb}
                  <a acre:if="article && article.source == 'wikipedia'" href="$article.source_uri">${_('Read entire article on Wikipedia')}</a>
                  <a href="#" title="${_('Show less')}" onclick="$$(this).parent('p').hide().prev('p').show();return false;">[ - ]</a>
                </p>
              </acre:block>
            </acre:block>
          </div>
        </div>

      </div>
      <div class="nav clear">
        ${nav_navs()}
        ${nav_tabs()}
      </div>
    </acre:block>
  </div><!!-- /page-header-->

  <div id="page-content">
    <acre:block if="that_exports.page_content">
      ${that_exports.page_content()}
    </acre:block>
  </div>
</acre:block>

<acre:block def="footer_script()">
  <acre:block if="that_exports.footer_script">
    ${that_exports.footer_script()}
  </acre:block>
</acre:block>

<acre:block def="nav_tabs()">
  <acre:script>
    var params = fh.global_filters(c.filters);
    // use fb_url to get lang param
    qs = h.fb_url("", params).substring(2);
  </acre:script>
  <ul class="tab-nav">
    <acre:block for="tab in c.tabs">
      <acre:script>
        var url = "?" + tab.key + (qs.length ? "&" + qs : "");
        var current = (tab.key === c.current_tab.key);
      </acre:script>
      <li>
        <a acre:if="current" href="#" onclick="return false;" class="current"><span>${_(tab.name)}</span></a>
        <a acre:else="" href="${url}"><span>${_(tab.name)}</span></a>
      </li>
    </acre:block>
    <li class="more"  acre:if="c.more_tabs && c.more_tabs.length">
      <ul class="inline-menu nicemenu">
        <li class="inline-menu-item nicemenu-item">
          <a  href="#" class="headmenu">
            <span>More</span>
          </a>
          <ul class="row-menu submenu left object-settings">
            <acre:block for="tab in c.more_tabs">
              <acre:script>
                var url = "?" + tab.key + (qs.length ? "&" + qs : "");
                var current = (tab.key === c.current_tab.key);
              </acre:script>
              <li>
                <a acre:if="current" href="#" onclick="return false;" class="current"><span>${_(tab.name)}</span></a>
                <a acre:else="" href="${url}"><span>${_(tab.name)}</span></a>
              </li>
            </acre:block>
          </ul>
        </li>
      </ul>
    </li>
  </ul>
</acre:block>

<acre:block def="nav_navs()" if="c.gear">
  <ul class="nav-utilities inline-menu nicemenu">
    <li class="inline-menu-item nicemenu-item">
      <span class="mark headmenu">
        <a href="#" class="object-actions-toggle">
          <span class="outer-cog">
            <span class="inner-cog"></span>
            <span class="cog one"></span>
            <span class="cog two"></span>
            <span class="cog three"></span>
            <span class="cog four"></span>
            <span class="cog five"></span>
            <span class="cog six"></span>
            <span class="cog seven"></span>
            <span class="cog eight"></span>
          </span>
        </a>
      </span>
      <ul class="row-menu submenu right object-settings">
        <acre:block for="nav in c.gear">
          ${nav_item(nav)}
        </acre:block>
      </ul>
    </li>
  </ul>
</acre:block>

<acre:block def="nav_item(nav)">
  <acre:script>
    exec(nav, c);
    var key = nav.key || nav.name.toLowerCase().replace(/\s+/g, '-');
    var href, onclick;
    if (nav.url) {
      href = nav.url;
    }
    else if (nav.key) {
      href = "?" + nav.key;
    }
    else if (nav.app && nav.ajax) {
      href = h.reentrant_url("/ajax", nav.app, "/", nav.ajax, nav.params);
      onclick = "return fb.nav_ajax(this);";
    }
    else if (nav.onclick) {
      href = "#";
      onclick = nav.onclick;
    }

    var show = true;
    if (nav.show) {
      show = acre.require(nav.app + "/" + nav.script)[nav.show](c.object);
    }
  </acre:script>
  <acre:block if="show">
    <li acre:attrs="nav.auth ? {'class':'edit'} : {}">               
      <acre:block if="href">
        <a href="${href}" acre:attrs="onclick ? {onclick:onclick} : {}">
          <span>${acre.markup.bless(nav.name)}</span>
        </a>
      </acre:block>
      <acre:block else="">
        <label>${acre.markup.bless(nav.name)}</label>
      </acre:block>
      <acre:block if="nav.subnavs">
        <ul class="subnavs">
          <acre:block for="subnav in nav.subnavs">
            ${nav_item(subnav)}
          </acre:block>
        </ul>
      </acre:block>
    </li>
  </acre:block>
</acre:block>


<acre:block def="object_label(label)">
  <div class="label">
    <a class="label-trigger ${label.toLowerCase()}" href="javascript:void(0)">$label</a>
  </div>
</acre:block>

<acre:block def="acre_javascript_vars()">
  <script>
    SERVER.c.id = "${c.object.id}";
  </script>
  <acre:block if="that_exports.acre_javascript_vars">
    ${that_exports.acre_javascript_vars()}
  </acre:block>
</acre:block>

