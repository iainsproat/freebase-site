<!!--
 Copyright 2010, Google Inc.
 All rights reserved.

 Redistribution and use in source and binary forms, with or without
 modification, are permitted provided that the following conditions are
 met:

     * Redistributions of source code must retain the above copyright
 notice, this list of conditions and the following disclaimer.
     * Redistributions in binary form must reproduce the above
 copyright notice, this list of conditions and the following disclaimer
 in the documentation and/or other materials provided with the
 distribution.
     * Neither the name of Google Inc. nor the names of its
 contributors may be used to endorse or promote products derived from
 this software without specific prior written permission.

 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 !!-->
 

<acre:block def="tabs(id, control_pane)">

  <acre:script>
    var TABS = [
      { name: 'Tools', template: tools, key: "tools"},
      { name: 'Variables', template: variables, key: "variables"}, 
      { name: 'Envelope', template: envelope, key: "envelope"}, 
      { name: 'Custom Envelope', template: custom_envelope, key: "customEnvelope"}, 
      { name: 'Settings', template: settings, key: "settings"}
    ];
  </acre:script>

  <div class="cuecard-controlPane section-tabs">
    <div id="$id">
      <ul class="section-tabset clear">
        <li acre:for="index, tab in TABS" class="section-tab tab">
          <a href="#$id-index"><span>$tab.name</span></a>
        </li>
      </ul>
      <div class="tabbed-content">
        <div acre:for="tab in TABS" class="cuecard-controlPane-tabBody" id="$id-$tab.key">
          ${tab.template(control_pane)}
        </div>
      </div>
    </div>
  </div>

</acre:block>


<acre:block def="tools(control_pane)">

  <acre:script>
    var BUTTONS = [
      {
        label: 'Qualify All Properties',
        command: '_qualify',
        hint: 'Expand all properties to their full IDs (e.g., "id" &rarr; "/type/object/id").'
      },
      {
        label: 'Turn Inside Out',
        command: '_redangle',
        hint: 'Take the inner most query node {...} that contains the text cursor and make it the outermost query node.'
      },
      {
        label: 'Generate Acre Template',
        command: '_generateCode',
        hint: 'Generate an ACRE template that can render the result of this query.'
      },
      {
        label: 'One-liner',
        command: '_oneLiner', 
        hint: 'Reformat query into a one-liner.'
      }
    ];
  </acre:script>

  <div class="cuecard-controlPane-section">
    <table><tr valign="top">
      <td>
        <div acre:for="b in BUTTONS" class="cuecard-controlPane-powerTool">
          <input type="submit" class="button" value="$b.label" acre:onclick="control_pane[b.command]()"/>
          <div class="cuecard-controlPane-powerTool-hint">$b.hint</div>
        </div>
      </td>
      <td width="40%">
        Results of tools<br/>
        <input type="radio" name="tools-result" value="replace" checked="true"> replace query (undo-able)<br/>
        <input type="radio" name="tools-result" value="output"> go into output pane
      </td>
    </tr></table>
  </div>

</acre:block>


<acre:block def="variables(control_pane)">
  <table class="cuecard-controlPane-variables">
    <tr>
      <th width="30%">name</th>
      <th width="50%">value</th>
      <th></th>
    </tr>
    <tr class="cuecard-controlPane-variables-row" acre:def="add_row()">
      <td><input /></td>
      <td><input /></td>
      <td>
        <input type="submit" class="button" value="Remove" 
               acre:onclick="$(this).closest('.cuecard-controlPane-variables-row').remove()"/>
      </td>
    </tr>
    ${add_row()}
  </table>
  <div>
    <input class="button" type="submit" value="Add" 
            acre:onclick="$('.cuecard-controlPane-variables').append($.acre(add_row()))"/>
  </div>
</acre:block>


<acre:block def="envelope(control_pane)">

  <acre:script>
    var opts = control_pane._options;
    var env = opts.env || {};
    var extended = opts.extended || env.extended;
    extended = (extended === 1) ? true : false;
    var as_of_time = opts.as_of_time || env.as_of_time || null;
    var use_permission_of = opts.use_permission_of || env.use_permission_of || null;
    delete env["extended"];
    delete env["as_of_time"];
    delete env["use_permission_of"];
    
    var ENV = [
      {name: 'extended', hint: 'Enable MQL extensions'},
      {name: 'as_of_time', hint: 'Resolve the query based on data in Freebase as of the given time in ISO8601 format, e.g., 2009-02-28, 2009-03-13T22:16:40'},
      {name: 'use_permission_of', hint: 'Specify the id of an object (typically a user, domain or type) whose permission you want to copy (<a href="http://freebaseapps.com/docs/mql/ch06.html#id2972357" target="_blank">more details</a>).'},
      {name: 'page', hint: 'Page number starting from 1 if there is a "limit" property in the top level query node.'},
      {name: 'cursor', hint: ''},
      {name: 'lang', hint: 'Return text values in the given language (specified with the language\'s Freebase ID)'},
      {name: 'escape', hint: ''},
      {name: 'uniqueness_failure', hint: ''}
    ];
  </acre:script>
  
  <div class="cuecard-controlPane-explanation">
    The query envelope contains directives to the query engine, specifying how to execute the query or how to return the results.
  </div>
  <table class="cuecard-controlPane-configurations">
    <tr acre:for="e in ENV">
      <td>$e.name</td>
      <td id="cuecard-controlPane-envelope-$e.name">
        <acre:block choose="e.name">
        
          <input acre:when="extended" name="extended" type="checkbox" acre:attrs="extended ? {'checked':''} : {}" />
        
          <input acre:when="as_of_time" name="as_of_time" value="${as_of_time||''}" />
        
          <input acre:when="use_permission_of" name="use_permission_of" value="${use_permission_of||''}" />
        
          <acre:block when="page">
            <input name="page" type="text" />
            <input type="submit" class="button cuecard-controlPane-configurations-page" value="Previous" />
            <input type="submit" class="button cuecard-controlPane-configurations-page" value="Next" />
          </acre:block>
        
          <acre:block when="cursor">
            <div>
              <input type="radio" name="cursor" checked value="">
              unspecified (return all results, possibly time-out)
            </div>
            <div>
              <input type="radio" name="cursor" value="true">
              true (start pagination with page size equal "limit" option in query)
            </div>
            <div>
              <input type="radio" name="cursor" value="custom">
              continue from cursor: 
              <div class="cuecard-controlPane-configurations-cursor">
                <input type="text" name="cursor" acre:onchange="$('#cuecard-controlPane-envelope-cursor').find('input[value=\'custom\']').attr('checked','checked')"/>
                <input type="submit" class="button" value="Paste from Last Result" /> 
                <input type="submit" class="button" cc:run="true" value="Paste &amp; Run" />
              </div>
            </div>
          </acre:block>
        
          <select acre:when="lang" class="cuecard-controlPane-configurations-languages">
            <option value="">--</option>
            <option acre:for="l in CueCard.Languages" value="$l.id">$l.name ($l.id)</option>
          </select>
        
          <select acre:when="escape">
            <option value="">--</option>
            <option value="html">html</option>
            <option value="false">false</option>
          </select>
          
          <select acre:when="uniqueness_failure">
            <option value="">--</option>
            <option value="soft">soft</option>
          </select>
          
        </acre:block>
        <div acre:if="e.hint.length > 0" class="cuecard-controlPane-hint">$e.hint</div>
      </td>
    </tr>
  </table>
  
  <acre:block script="ondomready">
    var self = control_pane;
    
    $(".cuecard-controlPane-configurations-cursor > .button").click(function() {
      if (self._options.outputPane != null) {
        var o = self._options.outputPane.getJson();
        if (o !== undefined && o !== null && "cursor" in o) {
          $('#cuecard-controlPane-envelope-cursor').find("input[type='text']").val(o.cursor);
          $('#cuecard-controlPane-envelope-cursor').find("input[type='radio'][value='custom']").attr("checked", "checked");

          if (self._options.queryEditor != null && $(this).attr("cc:run") == "true") {
            self._options.queryEditor.run();
          }
        }
      }
    });
    
    $("#cuecard-controlPane-envelope-page > .button").click(function() {
      var input = $("#cuecard-controlPane-envelope-page").find("input[type='text'][name='page']");
      var pageString = input.val();
      var page = parseInt(pageString) || 1;
      
      if ($(this).val() == "Previous") {
        page--;
      } else {
        page++;
      }
      
      if (page < 1) {
        input.val("1");
        return;
      } else {
        input.val(page);
        if (self._options.queryEditor != null) {
          self._options.queryEditor.run();
        }
      }
    });
  </acre:block>

</acre:block>


<acre:block def="custom_envelope(control_pane)">
  <acre:script>
    var env = "env" in control_pane._options ? control_pane._options.env : {};
    var has_env = false;
  </acre:script>
  
  <table class="cuecard-controlPane-customEnvelope">
    <tr>
      <th width="30%">name</th>
      <th width="50%">value</th>
      <th></th>
    </tr>
    <tr class="cuecard-controlPane-customEnvelope-row" acre:def="add_row(dontFocus, name, value)">
      <td><input value="${name||''}"/></td>
      <td><input value="${value||''}"/></td>
      <td>
        <input type="submit" class="button" value="Remove" 
               acre:onclick="$(this).closest('.cuecard-controlPane-customEnvelope-row').remove()"/>
      </td>
      <acre:block if="!dontFocus" script="ondomready">
        
      </acre:block>
    </tr>
    <acre:block for="key, value in env">
      <acre:script>has_env = true;</acre:script>
      ${add_row(true, key, JSON.stringify(value))}
    </acre:block>
    <acre:block if="!has_env">
      ${add_row(true)}
    </acre:block>
  </table>
  <div>
    <input type="submit" class="button" value="Add" 
           acre:onclick="$('.cuecard-controlPane-customEnvelope').append($.acre(add_row()))"/>
  </div>
</acre:block>


<acre:block def="settings(control_pane)">
  <div>
    <input type="checkbox" acre:attrs="($.cookie('cc_cp_clean') == '1') ? {'checked' : ''} : {}">
    Always clean up query before running
  </div>
  <div>
    <input type="checkbox" acre:attrs="($.cookie('cc_cp_align') == '1') ? {'checked' : ''} : {}">
    Align JSON property values with spaces
  </div>
  <div style="display: none;">
    <input type="checkbox">
    Try running query as you edit
  </div>
  <div>
    <input type="checkbox" acre:attrs="($.cookie('cc_cp_multi') == '1') ? {'checked' : ''} : {}">
    Show error messages with multiple lines on multiple lines
  </div>
</acre:block>
