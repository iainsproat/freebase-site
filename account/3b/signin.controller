/*
 * Copyright 2010, Google Inc.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met:
 *
 *     * Redistributions of source code must retain the above copyright
 * notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above
 * copyright notice, this list of conditions and the following disclaimer
 * in the documentation and/or other materials provided with the
 * distribution.
 *     * Neither the name of Google Inc. nor the names of its
 * contributors may be used to endorse or promote products derived from
 * this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

var h = acre.require("lib/helper/helpers.sjs");
var freebase = acre.require("lib/promise/apis").freebase;

var SPEC = {
  cache_policy: "nocache",
  template: "templates.mjt",

  run: function() {
    // Verify that a user is logged in, if there are not this will
    //  redirect to the login page
    try {
      if (acre.freebase.apiary_url) {
        acre.oauth.get_authorization();
      } else if (!acre.request.cookies['metaweb-user']) {
        acre.response.status = 302;
        var redirect_url = h.account_url('signin', acre.request.url);
        acre.response.set_header("Location", redirect_url);
        acre.exit();
      }
    } catch(e) {
      acre.response.set_header('content-type', 'text/plain');
      acre.write("Freebase Signin is currently down. Please try again later.");
      acre.exit();
    }
    
    // Get user information
    var user_d = freebase.get_user_info()
      .then(function(user) {
        if (!user) {
          acre.response.set_header('content-type', 'text/plain');
          acre.write("Freebase APIs are currently down. Please try again later.");
          acre.exit();
        }
        h.set_account_cookie(user);
        return user;
      });
   
    return {
      user: user_d,
      def: "signedin_popup"
    };
  }
};

