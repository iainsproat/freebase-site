/*
 * Copyright 2010, Google Inc.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met:
 *
 *     * Redistributions of source code must retain the above copyright
 * notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above
 * copyright notice, this list of conditions and the following disclaimer
 * in the documentation and/or other materials provided with the
 * distribution.
 *     * Neither the name of Google Inc. nor the names of its
 * contributors may be used to endorse or promote products derived from
 * this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

var h = acre.require("helpers.sjs");
var urlfetch = acre.require("lib/promise/apis").urlfetch;
var freebase = acre.require("lib/promise/apis").freebase;
var validators = acre.require("lib/validator/validators.sjs");

var SPEC = {
  cache_policy: 'nocache',
  template_base: 'lib/template/freebase_popup.mjt',
  template: 'signedin_template.mjt',

  validate: function(params) {
    return [
      validators.Uri(params, "onsignin", {required:false, if_empty:null})
    ];
  },

  run: function(onsignin) {
    var d;
    if (acre.freebase.googleapis_url) {
      // Finalize the authorization request.
      acre.oauth.get_authorization(h.account_provider());

      // HACK(culbertson): Remove metaweb-user cookies
      // because they mess up googleapis requests.
      if (acre.request.cookies['metaweb-user'] ||
          acre.request.cookies['metaweb-user-info']) {
        delete acre.request.cookies['metaweb-user'];
        delete acre.request.cookies['metaweb-user-info'];
        acre.response.clear_cookie('metaweb-user');
        acre.response.clear_cookie('metaweb-user-info');
      }
      d = h.user_info();
    } else {
      d = freebase.get_user_info().then(function(user) {
        if (!user) {
          throw 'User has not logged into Freebase.';
        }
        return user;
      });
    }

    return d.then(function(user) {
      h.set_account_cookie(user);
      if (onsignin) {
        h.temporary_redirect(onsignin);
      }
      else {
        return {'user': user};
      }
    }, function(failure) {
      if (failure instanceof h.UnauthorizedError) {
        // The credentials must be incorrect, so remove them.
        acre.oauth.remove_credentials(h.account_provider());
        h.clear_account_cookie();
        console.warn('Authorization credentials are not correct', failure);

      } else if (failure instanceof h.UnregisteredError) {
        return {template: 'register_template.mjt'};
      }

      return {
        template: 'error_template.mjt',
        message: 'There is an issue with Freebase signin. Please try again later.'
      };
    });
  }
};

