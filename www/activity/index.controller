/*
 * Copyright 2010, Google Inc.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met:
 *
 *     * Redistributions of source code must retain the above copyright
 * notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above
 * copyright notice, this list of conditions and the following disclaimer
 * in the documentation and/or other materials provided with the
 * distribution.
 *     * Neither the name of Google Inc. nor the names of its
 * contributors may be used to endorse or promote products derived from
 * this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

var queries = acre.require("queries.sjs");
var validators = acre.require("lib/validator/validators.sjs");

var SPEC = {

  cache_policy: "public",

  template: "activity.mjt",

  validate: function(params) {
    //if it's 0-12am UTC (after 4pm PDT time) we need to look two days in the past
    //new BDB will appear around 11-12am UTC every day
    return [
      validators.Int(params, "date_offset", {if_empty: (new Date().getHours() < 12 ? -2 : -1)}),
      validators.Int(params, "n_days", {if_empty: 0})
    ];
  },

  run: function(date_offset, n_days) {
    var dates = queries.dates.apply(null, arguments);
    
    var data = {
      dates: dates,
      title: 'Freebase Activity' + (dates.end[0] != dates.start[0] ? ' from ' + dates.start[1] + ' to ' +  dates.end[1] + ' (' + (parseInt(dates.number)+1) + ' days)' : ' for ' + dates.start[1]),
      type_names: { 
        '/type/domain' : 'Domains', 
        '/type/user' : 'Users', 
        '/type/type' : 'Types', 
        '/freebase/query' : 'Saved Views'
      },
      activity: queries.activity_by_dates(dates.all),
      freebase: queries.all_freebase()
    };
    
    return data;
  }

};