<!!--
 Copyright 2012, Google Inc.
 All rights reserved.

 Redistribution and use in source and binary forms, with or without
 modification, are permitted provided that the following conditions are
 met:

     * Redistributions of source code must retain the above copyright
 notice, this list of conditions and the following disclaimer.
     * Redistributions in binary form must reproduce the above
 copyright notice, this list of conditions and the following disclaimer
 in the documentation and/or other materials provided with the
 distribution.
     * Neither the name of Google Inc. nor the names of its
 contributors may be used to endorse or promote products derived from
 this software without specific prior written permission.

 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 !!-->

<acre:script>
  var c = this.exports.c = {};
  var h = acre.require("lib/helper/helpers.sjs");
  var components = acre.require("lib/template/components.mjt");
  var i18n = acre.require("lib/i18n/i18n.sjs");
  var i18n_c = acre.require("lib/i18n/components.mjt");
  var _ = i18n.gettext;
  var filter_components = acre.require("lib/filter/components.mjt");
  var freebase_components = acre.require("lib/template/components.mjt");
  var fh = acre.require("lib/filter/helpers.sjs");
  var EDIT = _("Edit");
  var DELETE = _("Delete");
  var TYPE_OBJECT_KEY = "/type/object/key";
  var TYPE_NAMESPACE_KEYS = "/type/namespace/keys";
  var INBOUND = _("/type/namespace/keys");
  var OUTBOUND = _("/type/object/key");
</acre:script>

<acre:block def="head()">
  <link rel="stylesheet" type="text/css" href="sameas.mf.css" />
  <link rel="stylesheet" type="text/css" href="lib/template/css/chosen.jquery.css" />
</acre:block>

<acre:block def="page_content()">
  <div class="column nav">
    <div class="module">
      <h2 class="module-title">
        <a href="javascript:void(0);" class="trigger">Collapse column</a>
        <span>Filter this data</span>
      </h2>
      <div class="module-section alt">
        ${property_filter()}
      </div>
      <div class="module-section alt">
        ${filter_components.timestamp_filter(c.object.id, c.filters)}
      </div>
      <div class="module-section alt">
        ${filter_components.as_of_time_filter(c.object.id, c.filters)}
      </div>
      <div class="module-section alt">
        ${filter_components.creator_filter(c.object.id, c.filters)}
      </div>
      <div class="module-section alt">
        ${filter_components.historical_filter(c.id, c.filters)}
      </div>
    </div>
  </div>
  <div class="column links${c.filters.historical ? ' historical' : ''}" 
       id="keys-data" role="main">
    ${keys(c.id, c.keys, c.filters)}
  </div>
</acre:block>

<acre:block def="property_filter()">
  <h3 class="module-section-title"><label for="">${_("Show")}:</label></h3>
  ${filter_components.filter_form(c.object.id, c.filters, 'property', property_filter_input, null, null)}
</acre:block>

<acre:block def="property_filter_input()">
  <select name="property" onchange="this.form.submit();">
    <option value=""
            acre:attrs="!c.filters.property ? {'selected':'selected'} : {}">
      ${_("all")}
    </option>
    <option value="/type/namespace/keys"
            acre:attrs="c.filters.property === '/type/namespace/keys' ? {'selected':'selected'} : {}">
      ${INBOUND}
    </option>
    <option value="/type/object/key"
            acre:attrs="c.filters.property === '/type/object/key' ? {'selected':'selected'} : {}"> 
      ${OUTBOUND}
    </option>
  </select>
</acre:block>

<acre:block def="keys(id, data, filters)">
  <div class="section">
    <div class="button-group edit">
      <a href="#" id="create-key" class="button primary"
         onclick="return freebase.dispatch(event, freebase.sameas.add_key, null, this);">${_("Create new")}</a>
    </div>
    <h2 class="table-title clear"><a name="infinitescroll-count">${_("Keys")} (${i18n_c.number(data.length)})</a></h2>
    <table class="table table-sortable" id="infinitescroll">
      <thead>
        <tr>
          <th class="column-header" scope="col">
            <span class="sort-icon">${_("property")}</span>
          </th>
          <th class="column-header first {sorter: 'string'}" scope="col">
            <span class="sort-icon">${_("key")}</span>
          </th>
          <th class="column-header {sorter: 'string'}" scope="col">
            <span class="sort-icon">${_("namespace/object")}</span>
          </th>
          <th class="column-header {sorter: 'string'}" scope="col">
            <span class="sort-icon">${_("user")}</span>
          </th>
          <th class="column-header {sorter: 'string'}" scope="col">
            <span class="sort-icon">${_("app")}</span>
          </th>
          <th class="column-header {sorter: 'string'}" scope="col">
            <span class="sort-icon">${_("dataset")}</span>
          </th>
          <th class="column-header column-header-asc {sorter: 'string'}" scope="col">
            <span class="sort-icon">${_("timestamp")}</span>
          </th>
          <th acre:if="filters.historical" class="column-header {sorter: 'string'}" scope="col">
            <span class="sort-icon">${_("operation")}</span>
          </th>
        </tr>
      </thead>

      ${keys_body(id, data, filters)}

      <tfoot>
        <tr>
          <td acre:attrs="filters.historical ? {colspan:'6'} : {colspan:'5'}">
            <acre:script>
              var params = {id:id};
              for (var k in filters) {
                if (filters[k] != null) {
                  params[k] = filters[k];
                }
              }              
            </acre:script>
            <a id="infinitescroll-next" href="${h.ajax_url('infinitescroll.ajax', params)}">next</a>
          </td>
        </tr>
      </tfoot>

    </table>
  </div>
</acre:block>

<acre:block def="keys_body(id, data, filters)">
  <tbody acre:attrs="data.length ? {'data-next':data[data.length-1].timestamp} : {}">
    <acre:block for="key in data">
      ${key_row(id, key, filters)}
    </acre:block>
  </tbody>
</acre:block>

<acre:block def="key_row(id, link, filters)">
  <acre:script>
    var outgoing = link["me:target"];
    var attr = h.get_attribution(link);
    var valid = link.valid === false ? ["invalid"] : ["valid"];
    if (link.operation) {
      valid.push(link.operation);   
    }
  </acre:script>
  <tr class="data-row ${valid.join(' ')}">
    <th class="row-header odd" scope="row">
      <span class="wrapper">
        <acre:block if="outgoing">
          <span title="${TYPE_OBJECT_KEY}" class="arrow arrow-right key-property"
                data-id="/type/object/key">${OUTBOUND}</span>
        </acre:block>
        <acre:block else="">
          <span title="${TYPE_NAMESPACE_KEYS}" class="arrow arrow-left key-property"
                data-id="/type/namespace/keys">${INBOUND}</span>
        </acre:block>
        ${key_menu(link)}
      </span>
    </th>
    <td class="even">
      <span class="truncate">
        <span class="literal-value literal-value-key property-value key-value"
              data-value="${link.target_value.value}">
          ${link.target_value.value}
        </span>
      </span>
    </td>
    <td class="odd">
      <acre:script>
        var other = outgoing ? link.source : link.target;
        var other_id, other_name;
        if (other["topic:type"]) {
          other_id = other.mid;
          other_name = other.mid;
        }
        else {
          other_id = other.id
          other_name = other.id;
        }
      </acre:script>
      <span class="truncate">
        <a class="property-value key-namespace"
           data-id="${other_id}" href="${h.fb_url(other_id)}">${other_name}</a>
      </span>
    </td>
    <td class="even">
      ${freebase_components.creator_link(attr.creator, null, [["writes"]])}
    </td>
    <td class="odd">
      ${freebase_components.app_link(attr.app, [["writes"]])}
    </td>
    <td class="even">
      ${freebase_components.dataset_link(attr.dataset, [["writes"]])}
    </td>
    <td class="odd">${link.timestamp}</td>
    <td acre:if="filters.historical" class="even">${link.operation}</td>
  </tr>
</acre:block>

<acre:block def="key_menu(link)">
  <acre:block if="link.valid !== false">
    <ul class="combo-menu nicemenu">
      <li class="nicemenu-item">
        <span class="headmenu">
          <a href="#" onclick="return false;" class="default-action edit-action">edit</a>
          <a href="javascript:void(0)" class="more-action">menu</a>
        </span>
        <ul class="submenu row-menu">
          <li class="row-menu-item"><a href="#" onclick="return fb.sameas.edit_key(this);">${EDIT}</a></li>
          <li class="row-menu-item"><a href="#" onclick="return fb.sameas.delete_key(this);">${DELETE}</a></li>
        </ul>
      </li>
    </ul>
  </acre:block>
</acre:block>

<acre:block def="footer_script()">
  <script src="lib/template/jquery.tablesorter.js"></script>
  <script src="sameas.mf.js"></script>
</acre:block>
