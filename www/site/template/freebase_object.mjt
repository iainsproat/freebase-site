<!!--
 Copyright 2010, Google Inc.
 All rights reserved.

 Redistribution and use in source and binary forms, with or without
 modification, are permitted provided that the following conditions are
 met:

     * Redistributions of source code must retain the above copyright
 notice, this list of conditions and the following disclaimer.
     * Redistributions in binary form must reproduce the above
 copyright notice, this list of conditions and the following disclaimer
 in the documentation and/or other materials provided with the
 distribution.
     * Neither the name of Google Inc. nor the names of its
 contributors may be used to endorse or promote products derived from
 this software without specific prior written permission.

 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 !!-->

<!!--
  This is the base template for any object (with an ID) in freebase
  Uses template/freebase.mjt for chrome
!!-->
<acre:script>
  var c = this.exports.c = {};
  var h = acre.require("lib/helper/helpers.sjs");
  var i18n = acre.require("lib/i18n/i18n.sjs");
  var i18n_c = acre.require("lib/i18n/components.mjt");
  var _ = i18n.gettext;
  var image = acre.require("lib/template/imagecomponents.mjt");
  var base = acre.require("lib/template/freebase.mjt");
  var self= this;
  var this_exports = this.exports;
  var that_exports;
  var fh = acre.require("lib/filter/helpers.sjs");

  // microdata helpers
  var microdata = acre.require("lib/helper/microdata.sjs");
  var itemprop = microdata.itemprop;
</acre:script>

<acre:block def="page(exports)">
  <acre:script>
    that_exports = exports;
  </acre:script>
  ${base.page(this_exports)}
</acre:block>

<acre:block def="freebase_js()">
  <script src="template/freebase_object.mf.js"></script>
</acre:block>

<acre:block def="freebase_css()">
  <link rel="stylesheet" type="text/css" href="template/freebase_object.mf.css" />
</acre:block>

<acre:block def="head()">
  <!-- canonical url -->
  <link rel="canonical" href="${h.fb_url(true, c.object.id)}" />

  <acre:block if="that_exports.head">
    ${that_exports.head()}
  </acre:block>
</acre:block>

<acre:block def="title()">
  ${i18n.display_name(c.object)}
</acre:block>

<acre:block def="breadcrumb()" if="c.breadcrumbs">
  <acre:script>
    var len = c.breadcrumbs.length;
  </acre:script>
  <acre:block if="len">
    <acre:script>
      var label = c.breadcrumbs[0].name;
    </acre:script>
    <!--<div class="page-header clear">
      <div class="breadcrumb clear">
        <ol>
          <li class="breadcrumb-item label ${label.toLowerCase()}">
            <span class="breacrumb-item-inner">
              <span class="breadcrumb-link">${label}</span>
            </span>
          </li>
          <acre:block for="(var i=1; i<len; i++)">
            <acre:script>
              var bc = c.breadcrumbs[i];
              var last = i === (len - 1);
            </acre:script>
            <li class="breadcrumb-item${last ? ' last' : ''}">
              <span class="breadcrumb-item-inner${last ? ' last' : ''}">
                <acre:block if="bc.id">
                  <a class="breadcrumb-link" href="${h.fb_url(bc.id)}">${bc.name}</a>
                </acre:block>
                <acre:block else="">
                  <span class="breadcrumb-link">${bc.name}</span>
                </acre:block>
              </span>
            </li>
          </acre:block>
        </ol>
      </div>
    </div>-->
  </acre:block>
</acre:block>

<acre:block def="content(exports)">
  <div id="content" class="clear" itemscope="" data-id="${c.object.id}">
    ${content_body()}
  </div>
</acre:block>

<acre:block def="content_body()">
  <div id="page-header">
    <!!--
       topic meta information @see queries/topic
    !!-->

    <acre:block if="c.object">

      <!!--
        Object Name + Creator + Timestamp
      !!-->

      <div class="foo">
        <span class="creation-timestamp">
          <span acre:if="c.object.creator"
                acre:attrs="itemprop('/type/object/creator', true)">
            <acre:script>
              var creator = h.get_creator(c.object.creator);
            </acre:script>

            ${image.user_image_tiny(creator)}
            ${_("Created by")}
            <a href="${h.fb_url(creator)}"
               title="${_('View user profile')}">${h.id_key(creator)}</a>
            ${_("on")}
          </span>
          <span acre:else="">
            ${_("Created on")}
          </span>
          <acre:script>
            var attrs = itemprop('/type/object/timestamp');
            attrs["class"] = "published";
            attrs["data-format"] = "long";
          </acre:script>
          ${i18n_c.datetime(c.object.timestamp, attrs)}
        </span>
        <acre:block if="c.breadcrumbs && c.breadcrumbs.length">
          <acre:script>
            var label = c.breadcrumbs[0].name;
          </acre:script>
        </acre:block>
        <span class="object-label"><a class="object-label-trigger" href="javascript:void(0)">$label</a></span>
        <acre:block if="c.object.name.length">
          <h1>
            <span acre:attrs="itemprop('/type/object/name')">
              ${c.object.name[0].value}
            </span>
            <ul class="inline-menu nicemenu">
              <li class="inline-menu-item nicemenu-item">
                <span class="headmenu">
                  <a href="#" class="menu-trigger" onclick="return false;">
                    ${i18n_c.lang_code(c.object.name[0].lang, null, true)}
                  </a>
                </span>
                <ul class="row-menu submenu">
                  <acre:script>
                    var ajax_prefix = h.ajax_url('lib/i18n');
                  </acre:script>
                  <li class="row-menu-item edit">                    
                    <a href="#" onclick="return i18n.text_edit(this, '${ajax_prefix}', '${c.object.id}', '/type/object/name', '${i18n.lang}');" class="icon-link">
                     <span class="edit-icon">${_("Edit localized names")} &hellip;</span>
                    </a>
                  </li>
                 <acre:block for="(var i=1,l=c.object.name.length; i<l; i++)">
                    <acre:script>
                      var n = c.object.name[i];
                    </acre:script>
                    <li class="row-menu-item">
                      <a href="${h.build_url(null, c.object.id, [['lang', n.lang]])}">
                        ${n.value}
                        ${i18n_c.lang_code(n.lang, null, true)}
                      </a>
                    </li>
                  </acre:block>
                </ul>
              </li>
            </ul> 
          </h1>
        </acre:block>
        <acre:block else="">
          <h1>
            <span acre:attrs="itemprop('/type/object/id')">${c.object.id}</span>
          </h1>
        </acre:block>
      </div>


      <acre:block if="that_exports.nav_flags">
        <span class="flags">
          ${that_exports.nav_flags()}
        </span>
      </acre:block>
      <div class="meta">
        <!-- Show topic MID -->
        <span class="key">
          <strong><abbr title="${_('ID')}">${_("id")}</abbr></strong>:
          <span acre:attrs="itemprop('/type/object/id')">${c.object.id}</span>
        </span>
        <acre:block if="that_exports.nav_keys">
          ${that_exports.nav_keys()}
        </acre:block>
      </div>
      <div id="description" class="clear">
        <div id="image">
          <acre:block if="c.object.image && c.object.image.length">
            ${image.image_stack(c.object.image)}
          </acre:block>
        </div>
        <!-- blurb should be sentence-level truncation at ~50 words -->
        <acre:block if="c.blurb">
          <p class="blurb" itemprop="desc">${c.blurb}</p>
          <!!--<a href="javascript:void(0);" class="blurb-trigger">${_('more')}</a>!!-->
        </acre:block>
      </div>
      <div class="nav clear">
        <ul class="nav-utilities">
         <acre:block if="that_exports.nav_utilities">
           ${that_exports.nav_utilities()}
         </acre:block>
         ${nav_navs()}
        </ul>
        <ul class="tab-nav">
          ${nav_tabs()}
        </ul>
      </div>
    </acre:block>
  </div>
  <div id="page-content">
    <acre:block if="that_exports.page_content">
      ${that_exports.page_content()}
    </acre:block>
  </div>
</acre:block>

<acre:block def="footer_script()">
  <acre:block if="that_exports.footer_script">
    ${that_exports.footer_script()}
  </acre:block>
</acre:block>

<acre:block def="nav_tabs()">
  <acre:script>
    var params = fh.global_filters(c.filters);
    // use fb_url to get lang param
    qs = h.fb_url("", params).substring(2);
  </acre:script>
  <acre:block for="tab in c.tabs">
    <acre:script>
      var url = "?" + tab.key + (qs.length ? "&" + qs : "");
      var current = (tab.key === c.current_tab.key);
    </acre:script>
    <li>
      <a acre:if="current" href="#" onclick="return false;" class="current"><span>${_(tab.name)}</span></a>
      <a acre:else="" href="${url}"><span>${_(tab.name)}</span></a>
    </li>
  </acre:block>
</acre:block>

<acre:block def="nav_navs()">
  <acre:block for="nav in c.navs">
    <acre:script>
      var key = nav.key || nav.name.toLowerCase().replace(/\s+/g, '-');
      var href, onclick;
      if (nav.url) {
        href = nav.url;
      }
      else if (nav.key) {
        href = "?" + nav.key;
      }
      else if (nav.app && nav.ajax) {
        href = h.reentrant_url("/ajax", nav.app, "/", nav.ajax, nav.params);
        onclick = "return fb.nav_ajax(this);";
      }
      else {
        href = "#";
      }

      //
      // substitute ${id} with c.object.id
      //
      href = href.replace(/\$\{id\}|\$\%7Bid\%7D/g, c.object.id);

      var show = true;
      if (nav.show) {
        show = acre.require(nav.app + "/" + nav.script)[nav.show](c.object);
      }
    </acre:script>
    <acre:block if="show">
      <li acre:attrs="nav.auth ? {'class':'edit'} : {}">
        <a href="${href}" acre:attrs="onclick ? {onclick:onclick} : {}" class="icon-link">
          <span class="${key}-icon">${nav.name}</span>
        </a>
      </li>
    </acre:block>
  </acre:block>
</acre:block>

<acre:block def="acre_javascript_vars()">
  <script>
    SERVER.c.id = "${c.object.id}";
  </script>
  <acre:block if="that_exports.acre_javascript_vars">
    ${that_exports.acre_javascript_vars()}
  </acre:block>
</acre:block>

