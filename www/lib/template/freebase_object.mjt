<!!--
 Copyright 2010, Google Inc.
 All rights reserved.

 Redistribution and use in source and binary forms, with or without
 modification, are permitted provided that the following conditions are
 met:

     * Redistributions of source code must retain the above copyright
 notice, this list of conditions and the following disclaimer.
     * Redistributions in binary form must reproduce the above
 copyright notice, this list of conditions and the following disclaimer
 in the documentation and/or other materials provided with the
 distribution.
     * Neither the name of Google Inc. nor the names of its
 contributors may be used to endorse or promote products derived from
 this software without specific prior written permission.

 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 !!-->

<!!--
  This is the base template for any object (with an ID) in freebase
  Uses template/freebase.mjt for chrome
!!-->
<acre:script>
  var c = this.exports.c = {};
  var h = acre.require("helper/helpers.sjs");
  var i18n = acre.require("i18n/i18n.sjs");
  var i18n_c = acre.require("i18n/components.mjt");
  var _ = i18n.gettext;
  var image = acre.require("template/imagecomponents.mjt");
  var base = acre.require("template/freebase.mjt");
  var this_exports = this.exports;
  var that_exports;

  // microdata helpers
  var microdata = acre.require("helper/microdata.sjs");
  var itemprop = microdata.itemprop;
</acre:script>

<acre:block def="page(exports)">
  <acre:script>
    that_exports = exports;
  </acre:script>
  ${base.page(this_exports)}
</acre:block>

<acre:block def="freebase_js()">
  <script src="template/freebase_object.mf.js"></script>
</acre:block>

<acre:block def="freebase_css()">
  <link rel="stylesheet" type="text/css" href="template/freebase_object.mf.css" />
</acre:block>

<acre:block def="head()">
  <acre:block if="that_exports.head">
    ${that_exports.head()}
  </acre:block>
</acre:block>

<acre:block def="title()">
  <acre:block if="that_exports.title">
    ${that_exports.title()}
  </acre:block>
</acre:block>

<acre:block def="breadcrumb()">
  <acre:block if="that_exports.breadcrumb">
    ${that_exports.breadcrumb()}
  </acre:block>
  <acre:block else="">
    <div class="page-header clear">
      <div class="breadcrumb clear">
        <ol>
          <li class="breadcrumb-item">
            <span class="breadcrumb-item-inner">
              <a href="${h.fb_url('/home')}">${_("Home")}</a>
            </span>
          </li>  
          <acre:block if="c.object">
            <li class="breadcrumb-item">
              <span class="breadcrumb-item-inner">
                <a href="#" onclick="return false">${c.object.id}</a>
              </span>
            </li>
          </acre:block>
        </ol>
      </div>
    </div>
  </acre:block>
</acre:block>

<acre:block def="content(exports)">
  <div id="content" class="clear" itemscope="" data-id="c.object.mid">
    ${content_body()}
  </div>
</acre:block>

<acre:block def="content_body()">
  <div id="page-header">
    <div class="page-meta">
      <!!--
         topic meta information @see queries/topic
      !!-->
      <acre:block if="c.object">
        <acre:block if="c.object.name.length">
          <h1>
            <span acre:attrs="itemprop('/type/object/name')">${c.object.name[0].value}</span>
            <ul class="inline-menu nicemenu">
              <li class="inline-menu-item nicemenu-item">
                <span class="headmenu">
                  <a href="#" class="menu-trigger" onclick="return false;">
                    ${i18n_c.lang_code(c.object.name[0].lang, null, true)}
                  </a>
                </span>
                <ul class="row-menu submenu">  
                  <acre:script>
                    var params = h.extend({}, acre.request.params);
                  </acre:script>
                  <acre:block for="(var i=1,l=c.object.name.length; i<l; i++)">
                    <acre:script>
                      var n = c.object.name[i];
                      if (n.lang === "/lang/en") {
                        delete params.lang;
                      }
                      else {
                        params.lang = n.lang;
                      }
                    </acre:script>
                    <li class="row-menu-item">
                      <a href="${h.build_url(null, c.object.id, params)}">
                        ${n.value}
                        ${i18n_c.lang_code(n.lang, null, true)}
                      </a>
                    </li>
                  </acre:block>
                </ul>
              </li>
            </ul> 
          </h1>
        </acre:block>
        <acre:block else="">
          <h1>
            <span acre:attrs="itemprop('/type/object/id')">${c.object.id}</span>
          </h1>
        </acre:block>
        <acre:block if="that_exports.nav_flags">
          <span class="flags">
            ${that_exports.nav_flags()}
          </span>
        </acre:block>
        <div class="meta">
          <!-- Show topic MID -->
          <span class="key">
            <strong><abbr title="${_('Machine ID')}">${_("mid")}</abbr></strong>:
            <span acre:attrs="itemprop('/type/object/mid')">${c.object.mid}</span>
          </span>
          <span class="key">
            <strong><abbr title="${_('ID')}">${_("id")}</abbr></strong>:
            <span acre:attrs="itemprop('/type/object/id')">${c.object.id}</span>
          </span>
          <!-- Show top-ranked notable type -->
          <span acre:if="c.object.notable_type && c.object.notable_type !== '/type/type'" class="key">
            <strong>${_('notable type')}</strong>:
            <a acre:attrs="itemprop('/common/topic/notable_types')"
               href="${h.fb_url(true, c.object.notable_type)}">${c.object.notable_type}</a>
          </span>
          <span acre:if="c.object.notable_for && c.object.notable_for !== c.object.notable_type" class="key">
            <strong>${_('notable for')}</strong>:
            <a acre:attrs="itemprop('/common/topic/notable_for')"
               href="${h.fb_url(true, c.object.notable_for)}">${c.object.notable_for}</a>
          </span>
          <acre:block if="that_exports.nav_keys">
            ${that_exports.nav_keys()}
          </acre:block>
        </div>
        <div class="admin-toolbox">
          <span class="creation-timestamp">
            <span acre:if="c.object.creator"
                  acre:attrs="itemprop('/type/object/creator', true)">
              ${image.user_image_small(c.object.creator)}
              ${_("Created by")}
              <a href="${h.fb_url(c.object.creator.id)}"
                 title="${_('View user profile')}">${i18n.display_name(c.object.creator)}</a>
              ${_("on")}
            </span>
            <span acre:else="">
              ${_("Created on")}
            </span>
            <acre:script>
              var attrs = itemprop('/type/object/timestamp');
              attrs["class"] = "published";
              attrs["data-format"] = "long";
            </acre:script>
            ${i18n_c.datetime(c.object.timestamp, attrs)}
          </span>
        </div>
        <acre:script>
          var [blurb, blob] = i18n.display_article(c.object, ["blurb", "blob"]);
        </acre:script>
        <div id="description" class="clear" acre:if="blurb && blob">
          <div id="image">
            <acre:block if="c.object.image && c.object.image.length">
              ${image.image_stack(c.object.image)}
            </acre:block>
          </div>
          <!-- blurb should be sentence-level truncation at ~50 words -->
          <p class="blurb" itemprop="desc">${blurb}</p>
          <div class="blob" itemprop="desc">${blob}</div>
          <a href="javascript:void(0);" class="blurb-trigger">${_('more')}</a>
        </div>
        <div class="nav clear">
          <ul class="tab-nav" acre:if="that_exports.nav_tabs">
            ${that_exports.nav_tabs(nav_tab)}
          </ul>
          <ul class="nav-utilities" acre:if="that_exports.nav_utilities">
            ${that_exports.nav_utilities()}
          </ul>
        </div>
      </acre:block>
    </div>
  </div>
  <div id="page-content">
    <acre:block if="that_exports.page_content">
      ${that_exports.page_content()}
    </acre:block>
  </div>
</acre:block>

<acre:block def="footer_script()">
  <acre:block if="that_exports.footer_script">
    ${that_exports.footer_script()}
  </acre:block>
</acre:block>

<acre:block def="nav_tab(current, label, url)">
  <a acre:if="current" href="#" onclick="return false;" class="current"><span>${label}</span></a>
  <a acre:else="" href="${url}"><span>${label}</span></a>
</acre:block>
