<!!--
 Copyright 2010, Google Inc.
 All rights reserved.

 Redistribution and use in source and binary forms, with or without
 modification, are permitted provided that the following conditions are
 met:

     * Redistributions of source code must retain the above copyright
 notice, this list of conditions and the following disclaimer.
     * Redistributions in binary form must reproduce the above
 copyright notice, this list of conditions and the following disclaimer
 in the documentation and/or other materials provided with the
 distribution.
     * Neither the name of Google Inc. nor the names of its
 contributors may be used to endorse or promote products derived from
 this software without specific prior written permission.

 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 !!-->

<acre:script>


  var mf = acre.require("MANIFEST").mf;
  var h = mf.require('core', 'helpers');
  var freebase = mf.require('promise', 'apis').freebase;
  var lib_ae = mf.require('appeditor-services', 'lib_appeditor_service');
  var util = mf.require('app_util');

  var queries = { }; 

  if (acre.request.params.id) {
  
  var query = mf.require('app_query').query;
  var resource = lib_ae.parse_path(acre.request.params.id);
  acre.freebase.extend_query(query, {'id' : resource.appid });
  queries['apps'] = freebase.mqlread(query);

  } else { 
  
  var namespace = acre.request.params['namespace'] || '/freebase/site';
  var query = mf.require('namespace_apps').query;
  query[0]['key']['namespace'] = namespace;
  queries['apps'] = freebase.mqlread(query);
  
  };

  var c = this.exports.c = {};

  var app_summary_url = h.url_for('admin', 'app_summary');
  var app_details_url = h.url_for('admin', 'app_details');

  var admin_path = h.url_for('admin', 'index').slice(7);
  admin_path = admin_path.slice(admin_path.indexOf('/'));


</acre:script>

<acre:block def="title()">
App Admin
</acre:block>

<acre:block def="head()">
  <link rel="stylesheet" type="text/css" href="${mf.css_src('admin.mf.css')}" />
</acre:block>

<acre:block def="content_body()">      

  <div id="message" style="background-color: #ccf; font-weight: bold; font-size: 1.5em; text-align: center"></div>
  <br/>

  <div class="section">
    <h2 class="table-title">Freebase Site Apps <a class="help-link" href="http://code.google.com/p/freebase-site/" rel="help external" title="Freebase Site on Google Code">Google Code</a></h2>
    <table cellspacing="0" class="table table-sortable">

      <!-- HEAD -->

      <thead>

        <!-- Row 1 of header - holds environments -->

        <tr>
          <th class="column-header">app</th>
          <acre:block for="env in util.ENV">
	    <th class="column-header" acre:attrs=" env['service_domain'] == acre.request.server_name ? {'colspan' :3 } : {'colspan' : 2, 'width' : '30%' }">${env['name']}
	      
	      <!-- We are in this environment right now -->
	      <acre:block if="env['service_domain'] == acre.request.server_name">
	        all apps: 
	        <a href="#" id="test-all">test</a> | <a href="#" id="release-all">release</a>
	      </acre:block>
	      <acre:block else="">
	        (<a href="${env['service_url'] + admin_path}">switch to this environment</a>)
	      </acre:block>
	    </th>
          </acre:block>
        </tr>

        <!-- Row 2 of header - holds latest/release headings -->

        <tr>
          <th></th>
          <acre:block for="env in util.ENV">
	    <th class="column-header">latest</th>
	    <th class="column-header">release</th>
	    <acre:block if="env['service_domain'] == acre.request.server_name">
	      <th class="column-header">actions</th>
	    </acre:block>
          </acre:block>
        </tr>
        
      </thead>
      
      <!-- BODY -->

      <tbody>
        <acre:block for="app in c.apps.result">
          
	  <acre:script>
	    var app_path =  lib_ae.parse_path(app.id).path;
	    var summary_url = app_summary_url + "?id=" + app_path.replace('\/\/', '%2f%2f');
	    //var details_url = app_details_url + "?id=" + app_path.replace('\/\/', '%2f%2f');
	  </acre:script>

	  <tr class="summary" id="summary-${util.html_id(app_path)}" app_id="${util.html_id(app_path)}" app_url="${summary_url}"><td colspan="2">fetching details...</td></tr>
          
        </acre:block>  
      </tbody>
    </table>
  </div>
</acre:block>

<acre:block def="footer_script()">
  <script src="${mf.js_src('admin.mf.js')}" type="text/javascript"></script>
</acre:block>

${mf.require('template', 'renderer').render_page(queries, this.exports)}
